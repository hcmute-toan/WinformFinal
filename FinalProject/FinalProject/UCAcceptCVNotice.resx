<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        j3o3jJtXlAAAAABJRU5ErkJggg==
</value>
  </data>
</root>