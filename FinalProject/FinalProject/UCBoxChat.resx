<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAdcAAAHXAYySCGgAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAEeElEQVR4Xu2aW8gVVRiGf9MoD2BWJh4g0NLyIslTpOChNJFOoB1I7UIi8MIDopYXgt2EB7DwQkHJ
        QvBKEzSom4iiEhNvxFADIc1uUvGsaZ6fV/4P1p7W7L1mH2bPyHrggX/PP3tmzbdn1vrWt6YjEolEIpFI
        JBIJ4lGciG+XzDdxLHbDungad+INvFNiz+BK7I7BTMEL6DtgWd2Pj2NN9Mu7F38Ul+E76LvViuocXIdX
        0a7lB+yCVdFtb1+QCsZkLBu60FXoXovUD5mKOjx75t3IXcOZWBbU8X2J1v7reLPz7+8wlUloX1qCnzuf
        dYB5WHTU2X2D1u5LOA33dn4+ianoV7Yv2q3yMd5G264etaj0wV/R2noaNRSKr1HbdC2pzED7sv425qI7
        HG7ErlgkBuLvaG08jsPQ2I72v1SewCN4GPtqg8Pr+C/aQXbgQ1gEnkFdsLVNgVBAXIICUIsXULeVHehH
        7I3tZAyeQmvTb/gYJmlKAMRwPIF2MF+08+JlvIjWFnV+aRlfRQB0q+sZ9yUQPkegywA8iHbAP1EJVJ7M
        Qg1v1oat+CCmURGAP5wPId7CZBCUM+xB2+cfHIl5sADVJjv3eqyV4VUEQB2dfQhRJ3sOk/TEb9H205j7
        CrYKXeQnaOfTkLYUQ6gIgHr4LI+A7+INZV1b0A7+H76LzUbD7mZ0z/MehtK0TtCHfpk1aCfQL7MYm4WG
        W0tk5GWcjlloaQCMReg+m6uxUZTd/YJ2TM3vX8Ss5BIA8T66vfNXWG9Vpj8eQDtWMrvLQm4BEK/hFbQT
        7sJMFRlQdvcX2jEO4SCsl9QAvIGa8ISoGeKzGIImIW7W+BOGZo3J7E4zOV92lwVvAMahbQz1bwxFwcqa
        NWbJ7rLgDYCyN3eCE6Kmm6Ek02Z5DIeij9no9h+ypQEQ/XBUoM/jwxjCeDyLdlIlSfa3evIPsRcKPdub
        0K07uPtrFNBo0Ai5doLJqbNOrtRZ5SjbJjVknvNsW4jq7XW32PZGJ125BSBZPNmAD6DQcKiEKW2tQfOJ
        V9FITroKPwwux5Dy2WBcgbtRpept+AH2wCSP4M9ox3TLXFloaQCUCq9FO0GzC6hKhVWBsuM3nAqH1gO0
        j/atRnIypBJ61dp7nWgypI7SzqPHSI9bKBUByFIPUH0wDU2H3Y5NPfdUbBW+6bBWrUKoCECWekBaAHwF
        EQ2TeTAfGyqIhNYDtE+yOiyeRDeI7SiJqW3u6lWmklgjJLM7DVMartrBS+gu5Cpr9I0koikBKGJZfDRq
        ucva1FBZXD2+OkiZ7P2LvDCiuUWtrDEoAHqubCf9bfiWxiy7Kwq1ssagAJR9cbRa1hi0OHq/LI+rAmXt
        tuVx9Q36XHV5XFNOm4+X+QUJZY1foLXffUFC6xhVcXNuWeZXZD5F91rkW1iVp/A82hf0ktRHWLaXpFSd
        /gzdO/l7rJUx3kN1OTcI94P7MFNhdQhq6EjW6MqmRgLVHkJLef9DQ8sE9N1mRVavyipLLNqrPJFIJBKJ
        RCKRNtHRcRcCvS3haq55CQAAAABJRU5ErkJggg==
</value>
  </data>
</root>