<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>